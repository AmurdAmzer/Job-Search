{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/styles/Home.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"aboutContent\": \"Home-module__FmBi5G__aboutContent\",\n  \"aboutHero\": \"Home-module__FmBi5G__aboutHero\",\n  \"aboutPage\": \"Home-module__FmBi5G__aboutPage\",\n  \"avatar\": \"Home-module__FmBi5G__avatar\",\n  \"ctaButton\": \"Home-module__FmBi5G__ctaButton\",\n  \"ctaSection\": \"Home-module__FmBi5G__ctaSection\",\n  \"featureGrid\": \"Home-module__FmBi5G__featureGrid\",\n  \"features\": \"Home-module__FmBi5G__features\",\n  \"footer\": \"Home-module__FmBi5G__footer\",\n  \"footerBottom\": \"Home-module__FmBi5G__footerBottom\",\n  \"footerTop\": \"Home-module__FmBi5G__footerTop\",\n  \"header\": \"Home-module__FmBi5G__header\",\n  \"hero\": \"Home-module__FmBi5G__hero\",\n  \"heroBackground\": \"Home-module__FmBi5G__heroBackground\",\n  \"heroContent\": \"Home-module__FmBi5G__heroContent\",\n  \"heroImage\": \"Home-module__FmBi5G__heroImage\",\n  \"heroSection\": \"Home-module__FmBi5G__heroSection\",\n  \"heroText\": \"Home-module__FmBi5G__heroText\",\n  \"logo\": \"Home-module__FmBi5G__logo\",\n  \"logoutBtn\": \"Home-module__FmBi5G__logoutBtn\",\n  \"nav\": \"Home-module__FmBi5G__nav\",\n  \"signupBtn\": \"Home-module__FmBi5G__signupBtn\",\n  \"splitImage\": \"Home-module__FmBi5G__splitImage\",\n  \"splitSection\": \"Home-module__FmBi5G__splitSection\",\n  \"splitText\": \"Home-module__FmBi5G__splitText\",\n  \"userSection\": \"Home-module__FmBi5G__userSection\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/devereweaver/Job-Search/frontend/app/components/LoggedinHeader.js"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"../styles/Home.module.css\";\n\nexport default function LoggedInHeader() {\n  const router = useRouter();\n  const [initial, setInitial] = useState(\"?\");\n\n  // âœ… Get user's name initial from localStorage\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      if (user?.name) {\n        setInitial(user.name.charAt(0).toUpperCase());\n      }\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    router.push(\"/\");\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>\n        <Link href=\"/\">\n          <Image src=\"/logo.png\" alt=\"Work Wing Logo\" width={180} height={60} />\n        </Link>\n      </div>\n      <nav className={styles.nav}>\n        {/*<Link href=\"/account-settings\">Account Settings</Link> */}\n        <Link href=\"/favorites\">Favorites</Link>\n        <Link href=\"/jobs\">Job Listings</Link>\n        <Link href=\"/messages\">Messages</Link>\n\n        {/*Avatar + Logout Button Section */}\n        <div className={styles.userSection}>\n        <span onClick={handleLogout} className={styles.logoutBtn}>\n            Log out\n          </span>\n          <div className={styles.avatar}>{initial}</div>\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,8CAA8C;IAC9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,wCAAmC;gBACjC,MAAM,OAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;gBAC7C,IAAI,MAAM,MAAM;oBACd,WAAW,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW;gBAC5C;YACF;QACF;mCAAG,EAAE;IAEL,MAAM,eAAe;QACnB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,6LAAC;QAAO,WAAW,oIAAA,CAAA,UAAM,CAAC,MAAM;;0BAC9B,6LAAC;gBAAI,WAAW,oIAAA,CAAA,UAAM,CAAC,IAAI;0BACzB,cAAA,6LAAC,+JAAA,CAAA,UAAI;oBAAC,MAAK;8BACT,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAI;wBAAY,KAAI;wBAAiB,OAAO;wBAAK,QAAQ;;;;;;;;;;;;;;;;0BAGpE,6LAAC;gBAAI,WAAW,oIAAA,CAAA,UAAM,CAAC,GAAG;;kCAExB,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAa;;;;;;kCACxB,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAQ;;;;;;kCACnB,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCAAY;;;;;;kCAGvB,6LAAC;wBAAI,WAAW,oIAAA,CAAA,UAAM,CAAC,WAAW;;0CAClC,6LAAC;gCAAK,SAAS;gCAAc,WAAW,oIAAA,CAAA,UAAM,CAAC,SAAS;0CAAE;;;;;;0CAGxD,6LAAC;gCAAI,WAAW,oIAAA,CAAA,UAAM,CAAC,MAAM;0CAAG;;;;;;;;;;;;;;;;;;;;;;;;AAK1C;GA3CwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/devereweaver/Job-Search/frontend/app/jobs/page.js"],"sourcesContent":["// 'use client';\n\n// import { useEffect, useState } from 'react';\n// import styles from './Jobs.module.css';\n// import jobsData from './mockJobs.json';\n// import LoggedInHeader from '../components/LoggedinHeader';\n// import { FaRegBookmark, FaBookmark } from 'react-icons/fa';\n\n// export default function JobsPage() {\n//   const { jobs } = jobsData;\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [savedIds, setSavedIds] = useState([]);\n\n//   // Currently using localStorage\n//   // When using MongoDB:\n//   // Replace this with a call to your backend API (e.g., /api/favorites?userId=xyz)\n//   useEffect(() => {\n//     const saved = JSON.parse(localStorage.getItem('favorites')) || [];\n//     const ids = saved.map((job) => job._id);\n//     setSavedIds(ids);\n//   }, []);\n\n//   const handleSearchChange = (e) => {\n//     setSearchQuery(e.target.value.toLowerCase());\n//   };\n\n// // Currently using localStorage\n// // When using MongoDB:\n// // Replace this with a POST to your backend API (e.g., POST /api/favorites)\n// const handleSaveToFavorites = async (job) => {\n//   const existing = JSON.parse(localStorage.getItem('favorites')) || [];\n//   const isSaved = existing.some((j) => j._id === job._id);\n\n//   let updated;\n\n//   if (isSaved) {\n//     // Remove from favorites if already saved\n//     updated = existing.filter((j) => j._id !== job._id);\n//   } else {\n//     // Add to favorites if not already saved\n//     updated = [...existing, job];\n//   }\n\n//   localStorage.setItem('favorites', JSON.stringify(updated));\n//   setSavedIds(updated.map((j) => j._id));\n\n//   // To use MongoDB:\n//   // await fetch('/api/favorites', {\n//   //   method: isSaved ? 'DELETE' : 'POST',\n//   //   headers: { 'Content-Type': 'application/json' },\n//   //   body: JSON.stringify({ userId: user.email, job })\n//   // });\n// };\n\n\n//   const filteredJobs = jobs.filter((job) => {\n//     const combinedText = `${job.job_title} ${job.employer_name} ${job.job_description}`.toLowerCase();\n//     return combinedText.includes(searchQuery);\n//   });\n\n//   return (\n//     <>\n//       <LoggedInHeader />\n//       <div className={styles.container}>\n//         <h1 className={styles.pageTitle}>Job Listings</h1>\n\n//         <div className={styles.searchContainer}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search jobs...\"\n//             value={searchQuery}\n//             onChange={handleSearchChange}\n//             className={styles.searchInput}\n//           />\n//         </div>\n\n//         <div className={styles.gapBelowSearch}></div>\n\n//         <div className={styles.jobGrid}>\n//           {filteredJobs.length > 0 ? (\n//             filteredJobs.map((job, index) => (\n//               <div key={index} className={styles.jobCard}>\n//                 <h2 className={styles.jobTitle}>{job.job_title}</h2>\n//                 <h3 className={styles.employer}>{job.employer_name}</h3>\n//                 <p className={styles.description}>\n//                   {job.job_description.substring(0, 300)}...\n//                 </p>\n\n//                 <div className={styles.buttonGroup}>\n//                   <a\n//                     href={job.job_apply_link}\n//                     className={styles.applyButton}\n//                     target=\"_blank\"\n//                     rel=\"noopener noreferrer\"\n//                   >\n//                     Apply Now\n//                   </a>\n\n//                   <button\n//   onClick={() => handleSaveToFavorites(job)}\n//   className={styles.saveButton}\n//   title={savedIds.includes(job._id) ? 'Saved' : 'Save to favorites'}\n// >\n//   {savedIds.includes(job._id) ? (\n//     <FaBookmark size={18} color=\"#0070f3\" />\n//   ) : (\n//     <FaRegBookmark size={18} color=\"#333\" />\n//   )}\n// </button>\n//                 </div>\n//               </div>\n//             ))\n//           ) : (\n//             <p className={styles.noResults}>No jobs found.</p>\n//           )}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport styles from './styles/Jobs.module.css';\n// import JobCard from '../components/JobCard';\nimport LoggedInHeader from '../components/LoggedinHeader';\n\nexport default function JobsPage() {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const res = await fetch('/api/jobs');\n        const data = await res.json();\n        setJobs(data);\n      } catch (err) {\n        setError('Failed to load jobs');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  useEffect(() => {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []);\n\n  const handleFavorite = (jobId) => {\n    let updatedFavorites;\n    if (favorites.includes(jobId)) {\n      updatedFavorites = favorites.filter(id => id !== jobId);\n    } else {\n      updatedFavorites = [...favorites, jobId];\n    }\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  const filteredJobs = jobs.filter(job =>\n    job.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    job.company?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    job.location?.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className={styles.jobsPage}>\n      <LoggedInHeader />\n      <div className={styles.searchBarContainer}>\n        <input\n          type=\"text\"\n          placeholder=\"Search jobs...\"\n          className={styles.searchBar}\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n\n      {loading && <p>Loading jobs...</p>}\n      {error && <p className={styles.error}>{error}</p>}\n\n      <div className={styles.jobList}>\n        {filteredJobs.map((job) => (\n          <JobCard\n            key={job._id}\n            job={job}\n            isFavorite={favorites.includes(job._id)}\n            onFavoriteToggle={() => handleFavorite(job._id)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}